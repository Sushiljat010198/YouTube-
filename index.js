const express = require('express');
const app = express();
const port = 3000;

const html = `<!DOCTYPE html>
<html lang='en'>
<head>
    <meta charset='UTF-8'>
    <title>Encrypted Page</title>
</head>
<body>
    <script>
        document.write(decodeURIComponent(escape(atob(""))));
    </script>
</body>
</html>`;

app.get('/', (req, res) => {
    res.send(html);
});

app.listen(port, '0.0.0.0', () => {
    console.log(`Server running at http://0.0.0.0:${port}`);
});
